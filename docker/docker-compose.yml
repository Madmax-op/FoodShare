version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: food_donation_db
    environment:
      POSTGRES_DB: food_donation_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - food_donation_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: food_donation_backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/food_donation_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      ML_SERVICE_URL: http://ml-service:5000
    depends_on:
      postgres:
        condition: service_healthy
      ml-service:
        condition: service_started
    networks:
      - food_donation_network
    restart: unless-stopped

  # Python ML Service
  ml-service:
    build:
      context: ../ml-prediction
      dockerfile: Dockerfile
    container_name: food_donation_ml
    ports:
      - "5000:5000"
    volumes:
      - ml_models:/app/models
    environment:
      FLASK_ENV: production
      PORT: 5000
    networks:
      - food_donation_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: food_donation_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - ml-service
    networks:
      - food_donation_network
    restart: unless-stopped

volumes:
  postgres_data:
  ml_models:

networks:
  food_donation_network:
    driver: bridge 