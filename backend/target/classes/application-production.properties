# Production Configuration for Render Deployment

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration (PostgreSQL on Render)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/foodshare}
spring.datasource.username=${DB_USERNAME:foodshare_user}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Redis Configuration (for caching)
spring.redis.host=${REDIS_URL:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.timeout=2000ms

# JWT Configuration
jwt.secret=${JWT_SECRET:your-super-secret-jwt-key-change-in-production}
jwt.expiration=86400000

# CORS Configuration
cors.allowed-origins=${CORS_ORIGINS:https://foodshare-app.onrender.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*

# Logging Configuration
logging.level.root=INFO
logging.level.com.ignithon=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ML Service Configuration
ml.service.url=${ML_SERVICE_URL:http://localhost:5000}

# Email Configuration (if using external email service)
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Security Configuration
security.jwt.enable=true
security.cors.enable=true
